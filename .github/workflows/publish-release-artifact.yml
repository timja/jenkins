name: Publish artifact

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set version
        id: set-version
        run: |
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "::set-output name=project-version::$version"
### WAR
      - name: Fetch war
        id: fetch-war
        run: |
          FILE_NAME=jenkins.war
          PROJECT_VERSION=${{ steps.set-version.outputs.project-version }}
          echo $PROJECT_VERSION
          echo "::set-output name=file-name::$FILE_NAME"
          wget -q https://get.jenkins.io/war/${PROJECT_VERSION}/jenkins.war
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ steps.fetch-war.outputs.file-name }}-${{ steps.set-version.outputs.project-version }}.jar
          asset_name: ${{ steps.fetch-war.outputs.file-name }}-${{ steps.set-version.outputs.project-version }}.jar
          asset_content_type: application/java-archive
### Debian          
      - name: Fetch Deb
        id: fetch-deb
        run: |
          PROJECT_VERSION=${{ steps.set-version.outputs.project-version }}
          echo $PROJECT_VERSION
          FILE_NAME=jenkins_2.${PROJECT_VERSION}.deb
          echo "::set-output name=file-name::$FILE_NAME"
          wget -q https://get.jenkins.io/debian/${FILE_NAME}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ steps.fetch-deb.outputs.file-name }}
          asset_name: ${{ steps.fetch-deb.outputs.file-name }}
          asset_content_type: application/vnd.debian.binary-package
### RedHat
      - name: Fetch RPM
        id: fetch-rpm
        run: |
          PROJECT_VERSION=${{ steps.set-version.outputs.project-version }}
          echo $PROJECT_VERSION
          FILE_NAME=jenkins-270-1.1.noarch.rpm
          #FILE_NAME=jenkins-${PROJECT_VERSION}-1.1.noarch.rpm
          echo "::set-output name=file-name::$FILE_NAME"
          wget -q https://get.jenkins.io/redhat/${FILE_NAME}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ steps.fetch-rpm.outputs.file-name }}
          asset_name: ${{ steps.fetch-rpm.outputs.file-name }}
          asset_content_type: application/x-redhat-package-manager
### Windows
      - name: Fetch MSI
        id: fetch-msi
        run: |
          PROJECT_VERSION=${{ steps.set-version.outputs.project-version }}
          echo $PROJECT_VERSION
          FILE_NAME=jenkins.msi
          echo "::set-output name=file-name::$FILE_NAME"
          wget -q https://get.jenkins.io/windows/${PROJECT_VERSION}/jenkins.msi
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ steps.fetch-msi.outputs.file-name }}
          asset_name: ${{ steps.fetch-msi.outputs.file-name }}
          asset_content_type: application/octet-stream
### openSUSE
      - name: Fetch suse rpm
        id: fetch-suse-rpm
        run: |
          PROJECT_VERSION=${{ steps.set-version.outputs.project-version }}
          echo $PROJECT_VERSION
          FILE_NAME=jenkins-2.${PROJECT_VERSION}-1.2.noarch.rpm
          echo "::set-output name=file-name::$FILE_NAME"
          wget -q https://ftp-nyc.osuosl.org/pub/jenkins/opensuse/${FILE_NAME}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ steps.fetch-suse-rpm.outputs.file-name }}
          asset_name: ${{ steps.fetch-suse-rpm.outputs.file-name }}
          asset_content_type: application/x-redhat-package-manager
